@using Apolo.Web.ViewModels
@model LoginViewModel
@{
    Layout = "~/Views/Account/_LoginLayout.cshtml";
    ViewBag.Title = "Iniciar Sesión";
}

<div class="login-box">
    <div class="logo">
        <a href="javascript:void(0);">Sistema <strong>Apolo</strong></a>
        <small>Iniciar Sesión</small>
    </div>
    <div class="card">
        <div class="body">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="msg">
                    @if(!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            @ViewBag.ErrorMessage
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
                    {
                        <div class="alert alert-danger">
                            @ViewBag.ErrorMessage
                        </div>
                    }
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">person</i>
                    </span>
                    <div class="form-line">
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @required = "required", @placeholder = Html.DisplayNameFor(m => m.Username), @autofocus = "autofocus" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="material-icons">lock</i>
                    </span>
                    <div class="form-line">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @required = "required", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Password).ToHtmlString()) })
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <button class="btn btn-block bg-light-blue waves-effect" type="submit">Entrar</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script>
        $(function () {
            $("form").validate({
                highlight: function (input) {
                    $(input).parents('.form-line').addClass('error');
                },
                unhighlight: function (input) {
                    $(input).parents('.form-line').removeClass('error');
                },
                errorPlacement: function (error, element) {
                    $(element).parents('.input-group').append(error);
                }
            });
        });
    </script>
}